[{"/Users/ozgursayin/Desktop/Coding/Appflix/app/src/components/Signup.jsx":"1","/Users/ozgursayin/Desktop/Coding/Appflix/app/src/components/MovieCard.jsx":"2","/Users/ozgursayin/Desktop/Coding/Appflix/app/src/contexts/AuthContext.jsx":"3","/Users/ozgursayin/Desktop/Coding/Appflix/app/src/components/Favorites.jsx":"4","/Users/ozgursayin/Desktop/Coding/Appflix/app/src/components/Watchlist.jsx":"5","/Users/ozgursayin/Desktop/Coding/Appflix/app/src/components/Login.jsx":"6","/Users/ozgursayin/Desktop/Coding/Appflix/app/src/layouts/MovieList.jsx":"7","/Users/ozgursayin/Desktop/Coding/Appflix/app/src/firebase.jsx":"8","/Users/ozgursayin/Desktop/Coding/Appflix/app/src/components/MovieDetails.jsx":"9","/Users/ozgursayin/Desktop/Coding/Appflix/app/src/components/SearchBox.jsx":"10","/Users/ozgursayin/Desktop/Coding/Appflix/app/src/App.js":"11","/Users/ozgursayin/Desktop/Coding/Appflix/app/src/components/Navbar.jsx":"12","/Users/ozgursayin/Desktop/Coding/Appflix/app/src/index.js":"13","/Users/ozgursayin/Desktop/Coding/Appflix/app/src/components/PrivateRoute.jsx":"14","/Users/ozgursayin/Desktop/Coding/Appflix/app/src/components/MovieSearch.jsx":"15","/Users/ozgursayin/Desktop/Coding/Appflix/app/src/reportWebVitals.js":"16","/Users/ozgursayin/Desktop/Coding/Appflix/app/src/components/ForgotPassword.jsx":"17","/Users/ozgursayin/Desktop/Coding/Appflix/app/src/components/DatabaseRefs.jsx":"18"},{"size":3777,"mtime":1607794782889,"results":"19","hashOfConfig":"20"},{"size":6861,"mtime":1607950356664,"results":"21","hashOfConfig":"20"},{"size":1135,"mtime":1607623801844,"results":"22","hashOfConfig":"20"},{"size":1347,"mtime":1607794629629,"results":"23","hashOfConfig":"20"},{"size":1363,"mtime":1607784987647,"results":"24","hashOfConfig":"20"},{"size":2941,"mtime":1607794838517,"results":"25","hashOfConfig":"20"},{"size":1975,"mtime":1607949045221,"results":"26","hashOfConfig":"20"},{"size":642,"mtime":1607778870359,"results":"27","hashOfConfig":"20"},{"size":5894,"mtime":1607711950395,"results":"28","hashOfConfig":"20"},{"size":482,"mtime":1607627303298,"results":"29","hashOfConfig":"20"},{"size":1230,"mtime":1607374415635,"results":"30","hashOfConfig":"20"},{"size":1516,"mtime":1607794967354,"results":"31","hashOfConfig":"20"},{"size":574,"mtime":1607777061491,"results":"32","hashOfConfig":"20"},{"size":482,"mtime":1607102548092,"results":"33","hashOfConfig":"20"},{"size":643,"mtime":1607203676221,"results":"34","hashOfConfig":"20"},{"size":362,"mtime":1606328177523,"results":"35","hashOfConfig":"20"},{"size":2246,"mtime":1607794941569,"results":"36","hashOfConfig":"20"},{"size":555,"mtime":1607862878882,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"k6cmnr",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ozgursayin/Desktop/Coding/Appflix/app/src/components/Signup.jsx",[],["79","80"],"/Users/ozgursayin/Desktop/Coding/Appflix/app/src/components/MovieCard.jsx",["81"],"import React, { useState, useEffect } from \"react\";\nimport styles from \"../ui/main.module.css\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport DatabaseRefs from \"./DatabaseRefs\";\n\nconst MovieCard = (props) => {\n  const { title, description, poster_path, id, media_type } = props;\n  const { currentUser } = useAuth();\n  const imageBaseURL = \"https://image.tmdb.org/t/p/original\";\n  const [filteredFavoriteMovieIds, setFilteredFavoriteMovieIds] = useState([]);\n  const [filteredWatchListMovieIds, setFilteredWatchListMovieIds] = useState(\n    []\n  );\n  const watchListMoviesFirestoreRef = DatabaseRefs()\n    .watchListMoviesFirestoreRef;\n  const favoriteMoviesFirestoreRef = DatabaseRefs().favoriteMoviesFirestoreRef;\n\n  const getFavoriteMovies = () => {\n    favoriteMoviesFirestoreRef.onSnapshot((querySnapshot) => {\n      const favoriteMovieIds = [];\n      querySnapshot.forEach((doc) => {\n        favoriteMovieIds.push(doc.data().id);\n      });\n      setFilteredFavoriteMovieIds(favoriteMovieIds);\n    });\n  };\n\n  const getWatchListMovies = () => {\n    watchListMoviesFirestoreRef.onSnapshot((querySnapshot) => {\n      const watchListMovieIds = [];\n      querySnapshot.forEach((doc) => {\n        watchListMovieIds.push(doc.data().id);\n      });\n      setFilteredWatchListMovieIds(watchListMovieIds);\n    });\n  };\n\n  useEffect(() => {\n    getFavoriteMovies();\n    getWatchListMovies();\n  }, []);\n\n  const addToFavorites = () => {\n    favoriteMoviesFirestoreRef\n      .add({\n        ...props.movie,\n        uid: currentUser.uid,\n        email: currentUser.email,\n      })\n      .then(() => {\n        console.log(\n          `\"${\n            props.movie.name || props.movie.title\n          }\" successfully added to Favorites`\n        );\n      })\n      .catch((error) => {\n        console.error(\"Error adding document: \", error);\n      });\n  };\n\n  const addToWatchList = () => {\n    watchListMoviesFirestoreRef\n      .add({\n        ...props.movie,\n        uid: currentUser.uid,\n        email: currentUser.email,\n      })\n      .then(() => {\n        console.log(\n          `\"${\n            props.movie.name || props.movie.title\n          }\" successfully added to Watch List`\n        );\n      })\n      .catch((error) => {\n        console.error(\"Error adding document: \", error);\n      });\n  };\n\n  const removefromFavorites = (id) => {\n    const filteredFavoriteMovieKeyID = [];\n    const unsubscribe = favoriteMoviesFirestoreRef.onSnapshot(\n      (querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          if (doc.data().id === id)\n            filteredFavoriteMovieKeyID.push([\n              doc.id,\n              doc.data().name || doc.data().title,\n              doc.data().id,\n              doc.data().uid,\n            ]);\n        });\n\n        const keyIdToDelete = filteredFavoriteMovieKeyID[0];\n        const keyToDelete = keyIdToDelete[0];\n        favoriteMoviesFirestoreRef\n          .doc(keyToDelete)\n          .delete()\n          .then(() => {\n            console.log(\n              `\"${keyIdToDelete[1]}\" successfully deleted from Favorites!`\n            );\n          })\n          .catch((error) => {\n            console.error(\"Error removing document: \", error);\n          });\n        unsubscribe();\n      }\n    );\n  };\n\n  const removefromWatchList = (id) => {\n    const filteredWatchListMovieKeyID = [];\n    const unsubscribe = watchListMoviesFirestoreRef.onSnapshot(\n      (querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          if (doc.data().id === id)\n            filteredWatchListMovieKeyID.push([\n              doc.id,\n              doc.data().name || doc.data().title,\n              doc.data().id,\n              doc.data().uid,\n            ]);\n        });\n        const keyIdToDelete = filteredWatchListMovieKeyID[0];\n        const keyToDelete = keyIdToDelete[0];\n\n        if (keyToDelete) {\n          watchListMoviesFirestoreRef\n            .doc(keyToDelete)\n            .delete()\n            .then(() => {\n              console.log(\n                `\"${keyIdToDelete[1]}\" successfully deleted from Watch List!`\n              );\n            })\n            .catch((error) => {\n              console.error(\"Error removing document: \", error);\n            });\n          unsubscribe();\n        }\n      }\n    );\n  };\n\n  const toPageInfo = {\n    pathname: `/details/${media_type}/${id}`,\n    state: { ...props.movie },\n  };\n\n  return (\n    <>\n      <div className={styles.page}>\n        <div className={styles.container}>\n          <div className={styles.content}>\n            <Link to={toPageInfo}>\n              <div className={styles.contentOverlay}></div>\n            </Link>\n\n            <img\n              className={styles.contentImage}\n              src={`${imageBaseURL}/${poster_path}`}\n              alt=\"Poster\"\n            />\n\n            <div className={`${styles.contentDetails} ${styles.fadeInTop}`}>\n              <Link to={toPageInfo}>\n                <h3>{title}</h3>\n                <p>{description}</p>\n              </Link>\n\n              <div\n                className={`${styles.toolTip} ${styles.likeButton}`}\n                onClick={addToFavorites}\n                hidden={\n                  filteredFavoriteMovieIds &&\n                  filteredFavoriteMovieIds.includes(id)\n                }\n              >\n                ❤<span className={styles.toolTipText}>Add to Favorites</span>\n              </div>\n              <div\n                className={`${styles.toolTip} ${styles.unlikeButton}`}\n                onClick={() => removefromFavorites(id)}\n                hidden={\n                  !filteredFavoriteMovieIds ||\n                  !filteredFavoriteMovieIds.includes(id)\n                }\n              >\n                x\n                <span className={styles.toolTipText}>\n                  Remove from Favorites\n                </span>\n              </div>\n\n              <div\n                className={`${styles.toolTip} ${styles.addButton}`}\n                onClick={addToWatchList}\n                hidden={\n                  filteredWatchListMovieIds &&\n                  filteredWatchListMovieIds.includes(id)\n                }\n              >\n                +<span className={styles.toolTipText}>Add to Watch List</span>\n              </div>\n              <div\n                className={`${styles.toolTip} ${styles.removeButton}`}\n                onClick={() => removefromWatchList(id)}\n                hidden={\n                  !filteredWatchListMovieIds ||\n                  !filteredWatchListMovieIds.includes(id)\n                }\n              >\n                -\n                <span className={styles.toolTipText}>\n                  Remove from Watch List\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default MovieCard;\n","/Users/ozgursayin/Desktop/Coding/Appflix/app/src/contexts/AuthContext.jsx",[],"/Users/ozgursayin/Desktop/Coding/Appflix/app/src/components/Favorites.jsx",["82"],"/Users/ozgursayin/Desktop/Coding/Appflix/app/src/components/Watchlist.jsx",["83"],"/Users/ozgursayin/Desktop/Coding/Appflix/app/src/components/Login.jsx",[],"/Users/ozgursayin/Desktop/Coding/Appflix/app/src/layouts/MovieList.jsx",["84","85"],"/Users/ozgursayin/Desktop/Coding/Appflix/app/src/firebase.jsx",[],"/Users/ozgursayin/Desktop/Coding/Appflix/app/src/components/MovieDetails.jsx",["86"],"import React, { useState, useEffect } from \"react\";\nimport styles from \"../ui/details.module.css\";\nimport { useLocation } from \"react-router-dom\";\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const movie = location.state;\n  const api_key = process.env.REACT_APP_TMDB_API_KEY;\n  const movieID = movie.id;\n  const mediaType = movie.media_type;\n  const MovieDataBaseURL = `https://api.themoviedb.org/3`;\n  const queryURL = `${MovieDataBaseURL}/${mediaType}/${movieID}?api_key=${api_key}`;\n\n  const [movieDetails, setMovieDetails] = useState(\"\");\n\n  const fetchMovieDetails = async () => {\n    const result = await fetch(queryURL);\n    const resultMovies = await result.json();\n    setMovieDetails(resultMovies);\n  };\n\n  useEffect(() => {\n    fetchMovieDetails();\n  }, []);\n\n  const imageBaseURL = \"https://image.tmdb.org/t/p/original\";\n  const posterPath = movieDetails.poster_path;\n  const movieImage = `${imageBaseURL}/${posterPath}`;\n  const movieTitle = movieDetails.original_title || movieDetails.original_name;\n  const status = movieDetails.status;\n  const runtime = movieDetails.runtime;\n  const seasons = movieDetails.number_of_seasons;\n  const episodes = movieDetails.number_of_episodes;\n  const lifetime = runtime || episodes;\n  const minuteOrEpisode = runtime ? \" minutes\" : \" episodes\";\n  const duration =\n    (runtime &&\n      `${Math.floor(runtime / 60)} hour(s) ${runtime % 60} minutes`) ||\n    `${seasons} seasons`;\n\n  const genres =\n    movieDetails.genres &&\n    movieDetails.genres.map((genre) => genre.name).join(\", \");\n\n  const releaseDate = movieDetails.release_date || movieDetails.first_air_date;\n  const releaseYear =\n    (movieDetails.release_date && movieDetails.release_date.substring(0, 4)) ||\n    (movieDetails.first_air_date &&\n      movieDetails.first_air_date.substring(0, 4));\n\n  const tagLine = movieDetails.tagline;\n  const synopsis = movieDetails.overview;\n  const budget = parseInt(movieDetails.budget).toLocaleString();\n  const revenue = parseInt(movieDetails.revenue).toLocaleString();\n  const rating = `${movieDetails.vote_average}/10`;\n  const voteCount = movieDetails.vote_count;\n\n  const companyCredits =\n    movieDetails.production_companies &&\n    movieDetails.production_companies.map((company) => company.name).join(\", \");\n\n  const countries =\n    movieDetails.production_countries &&\n    movieDetails.production_countries.map((country) => country.name).join(\", \");\n\n  const networks =\n    movieDetails.networks &&\n    movieDetails.networks.map((network) => network.name).join(\", \");\n\n  return (\n    <div>\n      <div id={styles.container}>\n        <div id={styles.results}>\n          <div id={styles.movie}>\n            <div className={styles.movieDetailsContainer}>\n              <div\n                className={`${styles.column} ${styles.columnMd} ${styles.movieInfo}`}\n              >\n                <img src={movieImage} id={styles.poster} alt=\"Movie\" />\n              </div>\n              <div className={`${styles.column} ${styles.columnMd} `}>\n                <h1 id={styles.title}>\n                  {movieTitle}\n                  <span id={styles.date}> ({releaseYear})</span>\n                </h1>\n                <div className={styles.row}>\n                  <span className={styles.badge}>\n                    <span id={styles.status}>{status}</span>\n                  </span>\n                </div>\n                <div className={styles.row}>\n                  {duration} | {genres} | {releaseDate}\n                </div>\n                <h3 id={styles.tagline}>{tagLine}</h3>\n                <div id={styles.overview}>\n                  <p id={styles.synopsis}>{synopsis}</p>\n                </div>\n                <div className={styles.row}>\n                  <h2>Company Credits</h2>\n                  <div id={styles.companies}>{companyCredits}</div>\n                </div>\n                <div className={styles.row}>\n                  <h2>Countries</h2>\n                  <div id={styles.countries}>{countries}</div>\n                </div>\n\n                <div className={styles.row}>\n                  {mediaType === \"movie/\" ? (\n                    <div>\n                      <h2>Box Office</h2>\n\n                      <div id={styles.budget}>\n                        <strong>Budget:</strong> ${budget}\n                      </div>\n                      <div id={styles.revenue}>\n                        <strong>Revenue:</strong> ${revenue}\n                      </div>\n                    </div>\n                  ) : (\n                    <div>\n                      <h2>Networks</h2>\n                      <div id={styles.budget}>{networks}</div>\n                    </div>\n                  )}\n                </div>\n                <div className={styles.row}>\n                  <div className={`${styles.column} ${styles.columnMd}`}>\n                    <div className={styles.ratings}>\n                      <h2>Rating</h2>\n                      <span id={styles.rating}>\n                        {rating}\n                        <span> (</span>\n                        {voteCount} Votes\n                        <span>)</span>\n                      </span>\n                    </div>\n                  </div>\n                  <div className={`${styles.column} ${styles.columnMd}`}>\n                    <h2>Runtime</h2>\n                    <div>\n                      <div id={styles.runtime}>\n                        {lifetime}\n                        {minuteOrEpisode}\n                      </div>\n                    </div>\n                  </div>\n                  <div className={`${styles.column} ${styles.columnLg}`}>\n                    <h2>Related</h2>\n                    <ul id={styles.related}></ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","/Users/ozgursayin/Desktop/Coding/Appflix/app/src/components/SearchBox.jsx",[],"/Users/ozgursayin/Desktop/Coding/Appflix/app/src/App.js",[],"/Users/ozgursayin/Desktop/Coding/Appflix/app/src/components/Navbar.jsx",[],"/Users/ozgursayin/Desktop/Coding/Appflix/app/src/index.js",[],"/Users/ozgursayin/Desktop/Coding/Appflix/app/src/components/PrivateRoute.jsx",[],["87","88"],"/Users/ozgursayin/Desktop/Coding/Appflix/app/src/components/MovieSearch.jsx",[],["89","90"],"/Users/ozgursayin/Desktop/Coding/Appflix/app/src/reportWebVitals.js",[],"/Users/ozgursayin/Desktop/Coding/Appflix/app/src/components/ForgotPassword.jsx",["91"],"/Users/ozgursayin/Desktop/Coding/Appflix/app/src/components/DatabaseRefs.jsx",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":42,"column":6,"nodeType":"98","endLine":42,"endColumn":8,"suggestions":"99"},{"ruleId":"96","severity":1,"message":"100","line":26,"column":6,"nodeType":"98","endLine":26,"endColumn":8,"suggestions":"101"},{"ruleId":"96","severity":1,"message":"102","line":26,"column":6,"nodeType":"98","endLine":26,"endColumn":8,"suggestions":"103"},{"ruleId":"96","severity":1,"message":"104","line":32,"column":6,"nodeType":"98","endLine":32,"endColumn":8,"suggestions":"105"},{"ruleId":"96","severity":1,"message":"104","line":41,"column":6,"nodeType":"98","endLine":41,"endColumn":21,"suggestions":"106"},{"ruleId":"96","severity":1,"message":"107","line":24,"column":6,"nodeType":"98","endLine":24,"endColumn":8,"suggestions":"108"},{"ruleId":"92","replacedBy":"109"},{"ruleId":"94","replacedBy":"110"},{"ruleId":"92","replacedBy":"111"},{"ruleId":"94","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":10,"column":10,"nodeType":"115","messageId":"116","endLine":10,"endColumn":17},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getFavoriteMovies' and 'getWatchListMovies'. Either include them or remove the dependency array.","ArrayExpression",["119"],"React Hook useEffect has a missing dependency: 'getFavoriteMovies'. Either include it or remove the dependency array.",["120"],"React Hook useEffect has a missing dependency: 'getWatchListMovies'. Either include it or remove the dependency array.",["121"],"React Hook useEffect has a missing dependency: 'fetchMovies'. Either include it or remove the dependency array.",["122"],["123"],"React Hook useEffect has a missing dependency: 'fetchMovieDetails'. Either include it or remove the dependency array.",["124"],["117"],["118"],["117"],["118"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},"Update the dependencies array to be: [getFavoriteMovies, getWatchListMovies]",{"range":"137","text":"138"},"Update the dependencies array to be: [getFavoriteMovies]",{"range":"139","text":"140"},"Update the dependencies array to be: [getWatchListMovies]",{"range":"141","text":"142"},"Update the dependencies array to be: [fetchMovies]",{"range":"143","text":"144"},"Update the dependencies array to be: [fetchMovies, searchedMovie]",{"range":"145","text":"146"},"Update the dependencies array to be: [fetchMovieDetails]",{"range":"147","text":"148"},[1443,1445],"[getFavoriteMovies, getWatchListMovies]",[719,721],"[getFavoriteMovies]",[731,733],"[getWatchListMovies]",[1165,1167],"[fetchMovies]",[1340,1355],"[fetchMovies, searchedMovie]",[786,788],"[fetchMovieDetails]"]